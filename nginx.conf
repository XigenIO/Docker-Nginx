user nginx;
worker_processes 4;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

worker_rlimit_nofile 40000;

thread_pool default threads=32 max_queue=65536;

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;

    client_body_buffer_size 10K;
    client_body_timeout 60;
    client_header_buffer_size 64k;
    client_header_timeout 60;
    client_max_body_size 100m;

    keepalive_timeout 60;
    large_client_header_buffers 4 64k;
    send_timeout 60;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    brotli on;
    brotli_comp_level 6;
    brotli_static always;
    brotli_types text/plain text/css application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon image/vnd.microsoft.icon image/bmp image/svg+xml;


    gzip on;
    gzip_static on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied  any;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 16k;
    gzip_http_version 1.1;

    aio threads;

    # http to https 301 redirect for all domains
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        server_name _;

        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        ssl_certificate /etc/nginx/app.pem;
        ssl_certificate_key /etc/nginx/app.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:25m;
        ssl_session_tickets off;

        resolver 1.1.1.1;

        error_log /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;

        # Docker healthcheck
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
        }

        include /etc/nginx/conf/pre-vhost.conf;
    }
}
